/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/v2/prisoners/{prisonerId}/contacts/social/approved/restrictions/visit-request/date-ranges': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Get all date ranges of visitor restrictions which would cause a visit to be a request visit
     * @description Returns a List<DateRangeDto> containing all start/end date pairs of visitor restrictions which cause a visit to be a request visit
     */
    post: operations['getDateRangesForVisitorRestrictionsWhichEffectRequestVisits']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/v2/prisoners/{prisonerId}/contacts/social': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get Prisoners Social Contacts
     * @description Returns details of a prisoner's social contacts
     */
    get: operations['getPrisonerSocialContacts']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/v2/prisoners/{prisonerId}/contacts/social/approved': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get Prisoners Social Contacts that are approved
     * @description Returns details of a prisoner's social contacts that have been approved.
     */
    get: operations['getPrisonersSocialContactsApproved']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/v2/prisoners/{prisonerId}/contacts/social/approved/restrictions/closed': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get status on any visitors having closed restrictions
     * @description Returns a boolean true/false for a given list of visitors if any closed restrictions are found
     */
    get: operations['getClosedRestrictionStatusForPrisonerVisitors']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/v2/prisoners/{prisonerId}/contacts/social/approved/restrictions/banned/dateRange': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get an updated date range for visitors if a visitor with ban restriction is found, else returns original date
     * @description Returns an updated date range for visitors if one is found with an active ban restriction. If not, it returns the original date range
     */
    get: operations['getUpdatedDateRangeForPrisonerVisitorsIfFoundWithBanRestrictions']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/prisoners/{prisonerId}/contacts': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get Prisoner Contact
     * @deprecated
     * @description Returns details of a prisoner contacts
     */
    get: operations['getPrisonerContact']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/prisoners/{prisonerId}/contacts/social': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get Prisoners Social Contacts
     * @deprecated
     * @description Returns details of a prisoner's social contacts
     */
    get: operations['getPrisonerSocialContacts_1']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/prisoners/{prisonerId}/approved/social/contacts': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get Prisoners approved Social Contacts
     * @deprecated
     * @description Returns details of a prisoner's social contacts that have been approved.
     */
    get: operations['getPrisonersApprovedSocialContacts']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/prisoners/{prisonerId}/approved/social/contacts/restrictions/closed': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get status on any visitors having closed restrictions
     * @deprecated
     * @description Returns a boolean true/false for a given list of visitors if any closed restrictions are found
     */
    get: operations['getClosedRestrictionStatusForPrisonerVisitors_1']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/prisoners/{prisonerId}/approved/social/contacts/restrictions/banned/dateRange': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get an updated date range for visitors if a visitor with ban restriction is found, else returns original date
     * @deprecated
     * @description Returns an updated date range for visitors if one is found with an active ban restriction. If not, it returns the original date range
     */
    get: operations['getUpdatedDateRangeForPrisonerVisitorsIfFoundWithBanRestrictions_1']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
}
export type webhooks = Record<string, never>
export interface components {
  schemas: {
    ErrorResponse: {
      /** Format: int32 */
      status: number
      /** Format: int32 */
      errorCode?: number
      userMessage?: string
      developerMessage?: string
    }
    /** @description A date range */
    DateRangeDto: {
      /**
       * Format: date
       * @description The start of the date range
       */
      fromDate: string
      /**
       * Format: date
       * @description The end of the date range
       */
      toDate: string
    }
    /** @description Request body for finding visitor restriction date ranges which would effect request visits */
    RequestVisitVisitorRestrictionsBodyDto: {
      /** @description Prisoner Id of prisoner who the visit is for */
      prisonerId: string
      /** @description List of all visitors attending the visit */
      visitorIds: string[]
      /** @description A list of restriction codes to search for when finding visitor restrictions */
      supportedVisitorRestrictionsCodesForRequestVisits: string[]
      /** @description The current visit booking window date range (used to limit restriction search) */
      currentDateRange: components['schemas']['DateRangeDto']
    }
    /** @description An address */
    AddressDto: {
      /**
       * @description Address Type
       * @example BUS
       */
      addressType?: string
      /**
       * @description Flat
       * @example 3B
       */
      flat?: string
      /**
       * @description Premise
       * @example Liverpool Prison
       */
      premise?: string
      /**
       * @description Street
       * @example Slinn Street
       */
      street?: string
      /**
       * @description Locality
       * @example Brincliffe
       */
      locality?: string
      /**
       * @description Town/City
       * @example Liverpool
       */
      town?: string
      /**
       * @description Postal Code
       * @example LI1 5TH
       */
      postalCode?: string
      /**
       * @description County
       * @example HEREFORD
       */
      county?: string
      /**
       * @description Country
       * @example ENG
       */
      country?: string
      /**
       * @description Additional Information
       * @example This is a comment text
       */
      comment?: string
      /**
       * @description Primary Address
       * @example false
       */
      primary: boolean
      /**
       * @description No Fixed Address
       * @example false
       */
      noFixedAddress: boolean
      /**
       * Format: date
       * @description Date Added
       * @example 2000-10-31
       */
      startDate?: string
      /**
       * Format: date
       * @description Date ended
       * @example 2000-10-31
       */
      endDate?: string
      /** @description The phone number associated with the address */
      phones: components['schemas']['TelephoneDto'][]
      /** @description The address usages/types */
      addressUsages: components['schemas']['AddressUsageDto'][]
    }
    /** @description An Offender's address usage */
    AddressUsageDto: {
      /**
       * @description The address usages
       * @example HDC
       */
      addressUsage?: string
      /**
       * @description The address usages description
       * @example HDC Address
       */
      addressUsageDescription?: string
      /**
       * @description Active Flag
       * @example true
       */
      activeFlag?: boolean
    }
    /** @description A contact for a prisoner */
    ContactDto: {
      /**
       * Format: int64
       * @description Identifier for this contact (Person in NOMIS)
       * @example 5871791
       */
      personId?: number
      /**
       * @description First name
       * @example John
       */
      firstName: string
      /**
       * @description Middle name
       * @example Mark
       */
      middleName?: string
      /**
       * @description Last name
       * @example Smith
       */
      lastName: string
      /**
       * Format: date
       * @description Date of birth
       * @example 1980-01-28
       */
      dateOfBirth?: string
      /**
       * @description Code for relationship to Prisoner
       * @example RO
       */
      relationshipCode: string
      /**
       * @description Description of relationship to Prisoner
       * @example Responsible Officer
       */
      relationshipDescription?: string
      /**
       * @description Type of Contact
       * @example O
       */
      contactType: string
      /**
       * @description Description of Contact Type
       * @example Official
       */
      contactTypeDescription?: string
      /** @description Approved Visitor Flag */
      approvedVisitor: boolean
      /** @description Emergency Contact Flag */
      emergencyContact: boolean
      /** @description Next of Kin Flag */
      nextOfKin: boolean
      /** @description List of restrictions associated with the contact */
      restrictions: components['schemas']['RestrictionDto'][]
      /** @description List of addresses associated with the contact */
      addresses: components['schemas']['AddressDto'][]
      /**
       * @description Additional Information
       * @example This is a comment text
       */
      commentText?: string
    }
    /** @description A contact for a prisoner */
    RestrictionDto: {
      /**
       * Format: int32
       * @description Restriction ID
       * @example 123
       */
      restrictionId: number
      /**
       * @description Restriction Type Code
       * @example 123
       */
      restrictionType: string
      /**
       * @description Description of Restriction Type
       * @example 123
       */
      restrictionTypeDescription: string
      /**
       * Format: date
       * @description Date from which the restriction applies
       * @example 2000-10-31
       */
      startDate: string
      /**
       * Format: date
       * @description Restriction Expiry
       * @example 2000-10-31
       */
      expiryDate?: string
      /** @description True if applied globally to the contact or False if applied in the context of a visit */
      globalRestriction: boolean
      /**
       * @description Additional Information
       * @example This is a comment text
       */
      comment?: string
    }
    /** @description Telephone Details */
    TelephoneDto: {
      /**
       * @description Telephone number
       * @example 0114 2345678
       */
      number: string
      /**
       * @description Telephone type
       * @example TEL
       */
      type: string
      /**
       * @description Telephone extension number
       * @example 123
       */
      ext?: string
    }
    /** @description Boolean flag signifying if any visitors have closed restrictions */
    HasClosedRestrictionDto: {
      /** @description Has closed restriction */
      value: boolean
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
  getDateRangesForVisitorRestrictionsWhichEffectRequestVisits: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['RequestVisitVisitorRestrictionsBodyDto']
      }
    }
    responses: {
      /** @description Date ranges returned (empty if none cause sessions to be request visits) */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['DateRangeDto'][]
        }
      }
      /** @description Incorrect request to Get date ranges for prisoner visitors */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to Get date ranges for prisoner visitors */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Prisoner or Visitor not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getPrisonerSocialContacts: {
    parameters: {
      query?: {
        /**
         * @description Defaults to false. By default when false, returns all contacts with or without a DOB. If true, returns only contacts with a DOB.
         * @example false
         */
        hasDateOfBirth?: boolean
        /**
         * @description by default returns addresses for all contacts, set to false if contact addresses not needed.
         * @example false
         */
        withAddress?: boolean
      }
      header?: never
      path: {
        /**
         * @description Prisoner Identifier (NOMIS Offender No)
         * @example A1234AA
         */
        prisonerId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Prisoner Social Contacts Information Returned */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ContactDto'][]
        }
      }
      /** @description Incorrect request to retrieve prisoner's approved social contacts */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to retrieve prisoner's approved social contacts */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Prisoner not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getPrisonersSocialContactsApproved: {
    parameters: {
      query?: {
        /**
         * @description Defaults to false. By default when false, returns all contacts with or without a DOB. If true, returns only contacts with a DOB.
         * @example false
         */
        hasDateOfBirth?: boolean
        /**
         * @description by default returns addresses for all contacts, set to false if contact addresses not needed.
         * @example false
         */
        withAddress?: boolean
      }
      header?: never
      path: {
        /**
         * @description Prisoner Identifier (NOMIS Offender No)
         * @example A1234AA
         */
        prisonerId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Prisoner Approved Social Contacts Information Returned */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ContactDto'][]
        }
      }
      /** @description Incorrect request to retrieve prisoner's approved social contacts */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to retrieve prisoner's approved social contacts */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Prisoner not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getClosedRestrictionStatusForPrisonerVisitors: {
    parameters: {
      query: {
        /**
         * @description Ids of prisoner visitors
         * @example 9147510, 8431201
         */
        visitors: number[]
      }
      header?: never
      path: {
        /**
         * @description Prisoner Identifier (NOMIS Offender No)
         * @example A1234AA
         */
        prisonerId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Returned status on visitor closed restrictions successfully */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HasClosedRestrictionDto']
        }
      }
      /** @description Incorrect request to Get status of visitors closed restrictions */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to Get status of visitors closed restrictions */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Prisoner or Visitor */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getUpdatedDateRangeForPrisonerVisitorsIfFoundWithBanRestrictions: {
    parameters: {
      query: {
        /**
         * @description Ids of prisoner visitors
         * @example 9147510, 8431201
         */
        visitors: number[]
        /**
         * @description Start date range
         * @example 2024-03-15
         */
        fromDate: string
        /**
         * @description To date range
         * @example 2024-03-31
         */
        toDate: string
      }
      header?: never
      path: {
        /**
         * @description Prisoner Identifier (NOMIS Offender No)
         * @example A1234AA
         */
        prisonerId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Date range returned (original or adjusted) */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['DateRangeDto']
        }
      }
      /** @description Incorrect request to Get date range for prisoner visitors */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to Get date range for prisoner visitors */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Prisoner, Visitor or Date range not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getPrisonerContact: {
    parameters: {
      query?: {
        /**
         * @description Query by Type (NOMIS Contact Type)
         * @example S
         */
        type?: string
        /**
         * @description Query by Person Identifier (NOMIS Person ID)
         * @example 9147510
         */
        id?: number
        /**
         * @description by default returns addresses for all contacts, set to false if contact addresses not needed.
         * @example false
         */
        withAddress?: boolean
      }
      header?: never
      path: {
        /**
         * @description Prisoner Identifier (NOMIS Offender No)
         * @example A1234AA
         */
        prisonerId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Prisoner Contacts Information Returned */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ContactDto'][]
        }
      }
      /** @description Incorrect request to Get Prisoner Contacts for Prisoner Identifier */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions retrieve a Prisoner Contacts */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Prisoner not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getPrisonerSocialContacts_1: {
    parameters: {
      query?: {
        /**
         * @description Query by Person Identifier (NOMIS Person ID)
         * @example 9147510
         */
        id?: number
        /**
         * @description Defaults to null. By default (or when false), returns all contacts with or without a DOB. If true, returns only contacts with a DOB.
         * @example false
         */
        hasDateOfBirth?: boolean
        /**
         * @description Get only visitors that have a ban date that expires before this date. Gets all visitors irrespective of BANs if not passed.
         * @example 2024-12-31
         */
        notBannedBeforeDate?: string
        /**
         * @description by default returns addresses for all contacts, set to false if contact addresses not needed.
         * @example false
         */
        withAddress?: boolean
        /**
         * @description by default set to true and will return only approved social contacts. If false, returns all social contacts
         * @example false
         */
        approvedVisitorsOnly?: boolean
      }
      header?: never
      path: {
        /**
         * @description Prisoner Identifier (NOMIS Offender No)
         * @example A1234AA
         */
        prisonerId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Prisoner Social Contacts Information Returned */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ContactDto'][]
        }
      }
      /** @description Incorrect request to retrieve prisoner's approved social contacts */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to retrieve prisoner's approved social contacts */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Prisoner not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getPrisonersApprovedSocialContacts: {
    parameters: {
      query?: {
        /**
         * @description Query by Person Identifier (NOMIS Person ID)
         * @example 9147510
         */
        id?: number
        /**
         * @description Defaults to null. By default (or when false), returns all contacts with or without a DOB. If true, returns only contacts with a DOB.
         * @example false
         */
        hasDateOfBirth?: boolean
        /**
         * @description Get only visitors that have a ban date that expires before this date. Gets all visitors irrespective of BANs if not passed.
         * @example 2024-12-31
         */
        notBannedBeforeDate?: string
        /**
         * @description by default returns addresses for all contacts, set to false if contact addresses not needed.
         * @example false
         */
        withAddress?: boolean
      }
      header?: never
      path: {
        /**
         * @description Prisoner Identifier (NOMIS Offender No)
         * @example A1234AA
         */
        prisonerId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Prisoner Approved Social Contacts Information Returned */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ContactDto'][]
        }
      }
      /** @description Incorrect request to retrieve prisoner's approved social contacts */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to retrieve prisoner's approved social contacts */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Prisoner not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getClosedRestrictionStatusForPrisonerVisitors_1: {
    parameters: {
      query: {
        /**
         * @description Ids of prisoner visitors
         * @example 9147510, 8431201
         */
        visitors: number[]
      }
      header?: never
      path: {
        /**
         * @description Prisoner Identifier (NOMIS Offender No)
         * @example A1234AA
         */
        prisonerId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Returned status on visitor closed restrictions successfully */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HasClosedRestrictionDto']
        }
      }
      /** @description Incorrect request to Get status of visitors closed restrictions */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to Get status of visitors closed restrictions */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Prisoner or Visitor */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getUpdatedDateRangeForPrisonerVisitorsIfFoundWithBanRestrictions_1: {
    parameters: {
      query: {
        /**
         * @description Ids of prisoner visitors
         * @example 9147510, 8431201
         */
        visitors: number[]
        /**
         * @description Start date range
         * @example 2024-03-15
         */
        fromDate: string
        /**
         * @description To date range
         * @example 2024-03-31
         */
        toDate: string
      }
      header?: never
      path: {
        /**
         * @description Prisoner Identifier (NOMIS Offender No)
         * @example A1234AA
         */
        prisonerId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Date range returned (original or adjusted) */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['DateRangeDto']
        }
      }
      /** @description Incorrect request to Get date range for prisoner visitors */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to Get date range for prisoner visitors */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Prisoner, Visitor or Date range not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
}
