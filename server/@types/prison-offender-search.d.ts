/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/queue-admin/retry-dlq/{dlqName}': {
    put: operations['retryDlq']
  }
  '/queue-admin/retry-all-dlqs': {
    put: operations['retryAllDlqs']
  }
  '/queue-admin/purge-queue/{queueName}': {
    put: operations['purgeQueue']
  }
  '/prisoner-index/switch-index': {
    /** current index will be switched both indexed have to be complete, requires PRISONER_INDEX role */
    put: operations['switchIndex']
  }
  '/prisoner-index/queue-housekeeping': {
    /** This is an internal service which isn't exposed to the outside world. It is called from a Kubernetes CronJob named `index-housekeeping-cronjob` */
    put: operations['indexQueueHousekeeping']
  }
  '/prisoner-index/mark-complete': {
    /** Swaps to the newly built index, requires PRISONER_INDEX role */
    put: operations['indexComplete']
  }
  '/prisoner-index/index/prisoner/{prisonerNumber}': {
    /** Requires PRISONER_INDEX role */
    put: operations['indexPrisoner']
  }
  '/prisoner-index/cancel-index': {
    /** Only cancels if indexing is in progress, requires PRISONER_INDEX role */
    put: operations['cancelIndex']
  }
  '/prisoner-index/build-index': {
    /** Old index is left untouched and will be maintained whilst new index is built, requires PRISONER_INDEX role */
    put: operations['buildIndex']
  }
  '/restricted-patient-search/match-restricted-patients': {
    /** Requires ROLE_GLOBAL_SEARCH or ROLE_PRISONER_SEARCH role */
    post: operations['findByCriteria']
  }
  '/prisoner-search/release-date-by-prison': {
    /** Requires ROLE_GLOBAL_SEARCH or ROLE_PRISONER_SEARCH role */
    post: operations['findByReleaseDateAndPrison']
  }
  '/prisoner-search/prisoner-numbers': {
    /** Requires ROLE_GLOBAL_SEARCH or ROLE_PRISONER_SEARCH role */
    post: operations['findByNumbers']
  }
  '/prisoner-search/possible-matches': {
    /** Requires ROLE_GLOBAL_SEARCH or ROLE_PRISONER_SEARCH role */
    post: operations['findPossibleMatchesBySearchCriteria']
  }
  '/prisoner-search/match': {
    /** Requires ROLE_GLOBAL_SEARCH or ROLE_PRISONER_SEARCH role */
    post: operations['findByCriteria_1']
  }
  '/prisoner-search/match-prisoners': {
    /** Requires ROLE_GLOBAL_SEARCH or ROLE_PRISONER_SEARCH role */
    post: operations['findByCriteria_2']
  }
  '/prisoner-search/booking-ids': {
    /** Requires ROLE_GLOBAL_SEARCH or ROLE_PRISONER_SEARCH role */
    post: operations['findByIds']
  }
  '/prisoner-detail': {
    /**
     * Search terms and identifiers can be provided in either or mixed case and are converted to the appropriate case.
     *       This endpoint will find both exact values (full term matched) or wildcards supporting the '*' and '?' symbols.
     *       The '*' symbol will match any number of characters e.g. firstName='J*' will match 'John', 'Jane', and 'James'.
     *       The '?' symbol will match any letter substituted at that position. e.g. firstName='t?ny' will match 'Tony' and 'Tiny'
     *       Requires ROLE_GLOBAL_SEARCH or ROLE_PRISONER_SEARCH role.
     */
    post: operations['prisonerDetailSearch']
  }
  '/match-prisoners': {
    /** Specify the request criteria to match against, role required is ROLE_GLOBAL_SEARCH or ROLE_PRISONER_SEARCH */
    post: operations['matchPrisoners']
  }
  '/keyword': {
    /**
     * Words and identifiers can be provided in either or mixed case and will be matched against all indexed text and keyword fields.
     *       Identifiers within the [and, or, not, exact] terms are detected and converted to the appropriate case.
     *       Requires ROLE_GLOBAL_SEARCH or ROLE_PRISONER_SEARCH role.
     */
    post: operations['keywordSearch']
  }
  '/global-search': {
    /** Requires ROLE_GLOBAL_SEARCH role or ROLE_PRISONER_SEARCH role */
    post: operations['globalFindByCriteria']
  }
  '/synthetic-monitor': {
    get: operations['syntheticMonitor']
  }
  '/queue-admin/get-dlq-messages/{dlqName}': {
    get: operations['getDlqMessages']
  }
  '/prisoner/{id}': {
    /** Requires ROLE_PRISONER_SEARCH or ROLE_VIEW_PRISONER_DATA role */
    get: operations['findByPrison']
  }
  '/prisoner-search/prison/{prisonId}': {
    /** Requires ROLE_GLOBAL_SEARCH or ROLE_PRISONER_SEARCH role */
    get: operations['findByPrison_1']
  }
  '/prison/{prisonId}/prisoners': {
    /**
     * This search is optimised for clients that have a simple search term typically containing the prisonser's name
     *       or prisoner number. The user typically is certain the prisoner is within the establishment and knows key information
     *       about the prisoner.
     *       Requires ROLE_GLOBAL_SEARCH or ROLE_PRISONER_SEARCH role.
     */
    get: operations['search']
  }
}

export interface components {
  schemas: {
    Message: {
      messageId?: string
      receiptHandle?: string
      body?: string
      attributes?: { [key: string]: string }
      messageAttributes?: {
        [key: string]: components['schemas']['MessageAttributeValue']
      }
      md5OfBody?: string
      md5OfMessageAttributes?: string
    }
    MessageAttributeValue: {
      stringValue?: string
      binaryValue?: {
        /** Format: int32 */
        short?: number
        char?: string
        /** Format: int32 */
        int?: number
        /** Format: int64 */
        long?: number
        /** Format: float */
        float?: number
        /** Format: double */
        double?: number
        direct?: boolean
        readOnly?: boolean
      }
      stringListValues?: string[]
      binaryListValues?: {
        /** Format: int32 */
        short?: number
        char?: string
        /** Format: int32 */
        int?: number
        /** Format: int64 */
        long?: number
        /** Format: float */
        float?: number
        /** Format: double */
        double?: number
        direct?: boolean
        readOnly?: boolean
      }[]
      dataType?: string
    }
    RetryDlqResult: {
      /** Format: int32 */
      messagesFoundCount: number
      messages: components['schemas']['Message'][]
    }
    PurgeQueueResult: {
      /** Format: int32 */
      messagesFoundCount: number
    }
    IndexStatus: {
      id: string
      currentIndex: 'INDEX_A' | 'INDEX_B'
      /** @example 2021-07-05T10:35:17 */
      startIndexTime?: string
      /** @example 2021-07-05T10:35:17 */
      endIndexTime?: string
      inProgress: boolean
      inError: boolean
    }
    Prisoner: {
      /**
       * @description Prisoner Number
       * @example A1234AA
       */
      prisonerNumber?: string
      /**
       * @description PNC Number
       * @example 12/394773H
       */
      pncNumber?: string
      /**
       * @description PNC Number
       * @example 12/394773H
       */
      pncNumberCanonicalShort?: string
      /**
       * @description PNC Number
       * @example 2012/394773H
       */
      pncNumberCanonicalLong?: string
      /**
       * @description CRO Number
       * @example 29906/12J
       */
      croNumber?: string
      /**
       * @description Booking No.
       * @example 0001200924
       */
      bookingId?: string
      /**
       * @description Book Number
       * @example 38412A
       */
      bookNumber?: string
      /**
       * @description First Name
       * @example Robert
       */
      firstName?: string
      /**
       * @description Middle Names
       * @example John James
       */
      middleNames?: string
      /**
       * @description Last name
       * @example Larsen
       */
      lastName?: string
      /**
       * Format: date
       * @description Date of Birth
       * @example 1975-04-02
       */
      dateOfBirth?: string
      /**
       * @description Gender
       * @example Female
       */
      gender?: string
      /**
       * @description Ethnicity
       * @example White: Eng./Welsh/Scot./N.Irish/British
       */
      ethnicity?: string
      /**
       * @description Youth Offender?
       * @example true
       */
      youthOffender?: boolean
      /**
       * @description Marital Status
       * @example Widowed
       */
      maritalStatus?: string
      /**
       * @description Religion
       * @example Church of England (Anglican)
       */
      religion?: string
      /**
       * @description Nationality
       * @example Egyptian
       */
      nationality?: string
      /**
       * @description Status of the prisoner
       * @example ACTIVE IN
       */
      status?: string
      /**
       * @description Last Movement Type Code of prisoner
       * @example CRT
       */
      lastMovementTypeCode?: string
      /**
       * @description Last Movement Reason of prisoner
       * @example CA
       */
      lastMovementReasonCode?: string
      /**
       * @description In/Out Status
       * @example IN
       */
      inOutStatus?: 'IN' | 'OUT'
      /**
       * @description Prison ID
       * @example MDI
       */
      prisonId?: string
      /**
       * @description Prison Name
       * @example HMP Leeds
       */
      prisonName?: string
      /**
       * @description In prison cell location
       * @example A-1-002
       */
      cellLocation?: string
      /** @description Aliases Names and Details */
      aliases?: components['schemas']['PrisonerAlias'][]
      /** @description Alerts */
      alerts?: components['schemas']['PrisonerAlert'][]
      /**
       * @description Cell Sharing Risk Assessment
       * @example HIGH
       */
      csra?: string
      /**
       * @description Prisoner Category
       * @example C
       */
      category?: string
      /**
       * @description Legal Status
       * @example SENTENCED
       */
      legalStatus?:
        | 'RECALL'
        | 'DEAD'
        | 'INDETERMINATE_SENTENCE'
        | 'SENTENCED'
        | 'CONVICTED_UNSENTENCED'
        | 'CIVIL_PRISONER'
        | 'IMMIGRATION_DETAINEE'
        | 'REMAND'
        | 'UNKNOWN'
        | 'OTHER'
      /**
       * @description The prisoner's imprisonment status code.
       * @example LIFE
       */
      imprisonmentStatus?: string
      /**
       * @description The prisoner's imprisonment status description.
       * @example Serving Life Imprisonment
       */
      imprisonmentStatusDescription?: string
      /**
       * @description Most serious offence for this sentence
       * @example Robbery
       */
      mostSeriousOffence?: string
      /** @description Indicates that the offender has been recalled */
      recall?: boolean
      /**
       * @description Indicates the the offender has an indeterminate sentence
       * @example true
       */
      indeterminateSentence?: boolean
      /**
       * Format: date
       * @description Start Date for this sentence
       * @example 2020-04-03
       */
      sentenceStartDate?: string
      /**
       * Format: date
       * @description Actual of most likely Release Date
       * @example 2023-05-02
       */
      releaseDate?: string
      /**
       * Format: date
       * @description Release Date Confirmed
       * @example 2023-05-01
       */
      confirmedReleaseDate?: string
      /**
       * Format: date
       * @description Sentence Expiry Date
       * @example 2023-05-01
       */
      sentenceExpiryDate?: string
      /**
       * Format: date
       * @description Licence Expiry Date
       * @example 2023-05-01
       */
      licenceExpiryDate?: string
      /**
       * Format: date
       * @description HDC Eligibility Date
       * @example 2023-05-01
       */
      homeDetentionCurfewEligibilityDate?: string
      /**
       * Format: date
       * @description HDC Actual Date
       * @example 2023-05-01
       */
      homeDetentionCurfewActualDate?: string
      /**
       * Format: date
       * @description HDC End Date
       * @example 2023-05-02
       */
      homeDetentionCurfewEndDate?: string
      /**
       * Format: date
       * @description Top-up supervision start date
       * @example 2023-04-29
       */
      topupSupervisionStartDate?: string
      /**
       * Format: date
       * @description Top-up supervision expiry date
       * @example 2023-05-01
       */
      topupSupervisionExpiryDate?: string
      /**
       * Format: int32
       * @description Days added to sentence term due to adjustments.
       * @example 10
       */
      additionalDaysAwarded?: number
      /**
       * Format: date
       * @description Release date for Non determinant sentence (if applicable). This will be based on one of ARD, CRD, NPD or PRRD.
       * @example 2023-05-01
       */
      nonDtoReleaseDate?: string
      /**
       * @description Indicates which type of non-DTO release date is the effective release date. One of 'ARD’, 'CRD’, ‘NPD’ or 'PRRD’.
       * @example ARD
       */
      nonDtoReleaseDateType?: 'ARD' | 'CRD' | 'NPD' | 'PRRD'
      /**
       * Format: date
       * @description Date prisoner was received into the prison
       * @example 2023-05-01
       */
      receptionDate?: string
      /**
       * Format: date
       * @description Parole  Eligibility Date
       * @example 2023-05-01
       */
      paroleEligibilityDate?: string
      /**
       * Format: date
       * @description Automatic Release Date. If automaticReleaseOverrideDate is available then it will be set as automaticReleaseDate
       * @example 2023-05-01
       */
      automaticReleaseDate?: string
      /**
       * Format: date
       * @description Post Recall Release Date. if postRecallReleaseOverrideDate is available then it will be set as postRecallReleaseDate
       * @example 2023-05-01
       */
      postRecallReleaseDate?: string
      /**
       * Format: date
       * @description Conditional Release Date. If conditionalReleaseOverrideDate is available then it will be set as conditionalReleaseDate
       * @example 2023-05-01
       */
      conditionalReleaseDate?: string
      /**
       * Format: date
       * @description Actual Parole Date
       * @example 2023-05-01
       */
      actualParoleDate?: string
      /**
       * Format: date
       * @description Tariff Date
       * @example 2023-05-01
       */
      tariffDate?: string
      /**
       * @description current prison or outside with last movement information.
       * @example Outside - released from Leeds
       */
      locationDescription?: string
      /**
       * @description Indicates a restricted patient
       * @example true
       */
      restrictedPatient: boolean
      /**
       * @description Supporting prison ID for POM
       * @example LEI
       */
      supportingPrisonId?: string
      /**
       * @description Which hospital the offender has been discharged to
       * @example HAZLWD
       */
      dischargedHospitalId?: string
      /**
       * @description Hospital name to which the offender was discharged
       * @example Hazelwood House
       */
      dischargedHospitalDescription?: string
      /**
       * Format: date
       * @description Date of discharge
       * @example 2020-05-01
       */
      dischargeDate?: string
      /**
       * @description Any additional discharge details
       * @example Psychiatric Hospital Discharge to Hazelwood House
       */
      dischargeDetails?: string
    }
    /** @description Alerts */
    PrisonerAlert: {
      /**
       * @description Alert Type
       * @example H
       */
      alertType: string
      /**
       * @description Alert Code
       * @example HA
       */
      alertCode: string
      /**
       * @description Active
       * @example true
       */
      active: boolean
      /**
       * @description Expired
       * @example true
       */
      expired: boolean
    }
    /** @description Aliases Names and Details */
    PrisonerAlias: {
      /**
       * @description First Name
       * @example Robert
       */
      firstName: string
      /**
       * @description Middle names
       * @example Trevor
       */
      middleNames?: string
      /**
       * @description Last name
       * @example Lorsen
       */
      lastName: string
      /**
       * Format: date
       * @description Date of birth
       * @example 1975-04-02
       */
      dateOfBirth: string
      /**
       * @description Gender
       * @example Male
       */
      gender?: string
      /**
       * @description Ethnicity
       * @example White : Irish
       */
      ethnicity?: string
    }
    /** @description Search Criteria for Prisoner Search */
    RestrictedPatientSearchCriteria: {
      /**
       * @description Prisoner identifier, one of prisoner number, book number, booking ID or PNC
       * @example A1234AA,
       */
      prisonerIdentifier?: string
      /**
       * @description First Name
       * @example John
       */
      firstName?: string
      /**
       * @description Last Name
       * @example Smith
       */
      lastName?: string
      /**
       * @description List of supporting Prison Ids to restrict the search by. Unrestricted if not supplied or null
       * @example MDI
       */
      supportingPrisonIds?: string[]
    }
    PagePrisoner: {
      /** Format: int32 */
      totalPages?: number
      /** Format: int64 */
      totalElements?: number
      /** Format: int32 */
      size?: number
      content?: components['schemas']['Prisoner'][]
      /** Format: int32 */
      number?: number
      sort?: components['schemas']['Sort']
      first?: boolean
      last?: boolean
      /** Format: int32 */
      numberOfElements?: number
      pageable?: components['schemas']['PageableObject']
      empty?: boolean
    }
    PageableObject: {
      /** Format: int64 */
      offset?: number
      sort?: components['schemas']['Sort']
      /** Format: int32 */
      pageSize?: number
      paged?: boolean
      unpaged?: boolean
      /** Format: int32 */
      pageNumber?: number
    }
    Sort: {
      empty?: boolean
      sorted?: boolean
      unsorted?: boolean
    }
    /** @description Search Criteria for Release Date Search */
    ReleaseDateSearch: {
      /**
       * Format: date
       * @description The lower bound for the release date range of which to search - defaults to today if not provided
       * @example 2022-04-20
       */
      earliestReleaseDate?: string
      /**
       * Format: date
       * @description The upper bound for the release date range of which to search. A required field.
       * @example 2022-05-20
       */
      latestReleaseDate: string
      /**
       * @description List of Prison Ids (can include OUT and TRN) to restrict the search by. Unrestricted if not supplied or null
       * @example MDI
       */
      prisonIds?: string[]
    }
    PrisonerNumbers: {
      /**
       * @description List of prisoner numbers to search by
       * @example A1234AA
       */
      prisonerNumbers: string[]
    }
    /** @description Search Criteria for possible match */
    PossibleMatchCriteria: {
      /**
       * @description Prisoner first name
       * @example john
       */
      firstName?: string
      /**
       * @description Prisoner last Name
       * @example smith
       */
      lastName?: string
      /**
       * Format: date
       * @description Prisoner date of birth
       * @example 1996-02-10
       */
      dateOfBirth?: string
      /**
       * @description Police National Computer (PNC) number
       * @example 2018/0123456X
       */
      pncNumber?: string
      /**
       * @description The Prisoner NOMIS Id (aka prison number/offender no in DPS)
       * @example A1234AB
       */
      nomsNumber?: string
    }
    /** @description Search Criteria for Prisoner Search */
    PrisonSearch: {
      /**
       * @description Prisoner identifier, one of prisoner number, book number, booking ID or PNC
       * @example A1234AA,
       */
      prisonerIdentifier?: string
      /**
       * @description First Name
       * @example John
       */
      firstName?: string
      /**
       * @description Last Name
       * @example Smith
       */
      lastName?: string
      /**
       * @description Prison Id, Prison Id or OUT or TRN
       * @example MDI
       */
      prisonId?: string
      /** @description Include aliases in search */
      includeAliases: boolean
    }
    /** @description Search Criteria for Prisoner Search */
    SearchCriteria: {
      /**
       * @description Prisoner identifier, one of prisoner number, book number, booking ID or PNC
       * @example A1234AA,
       */
      prisonerIdentifier?: string
      /**
       * @description First Name
       * @example John
       */
      firstName?: string
      /**
       * @description Last Name
       * @example Smith
       */
      lastName?: string
      /**
       * @description List of Prison Ids (can include OUT and TRN) to restrict the search by. Unrestricted if not supplied or null
       * @example MDI
       */
      prisonIds?: string[]
      /** @description Include aliases in search */
      includeAliases: boolean
    }
    BookingIds: {
      /**
       * @description List of bookingIds to search by
       * @example 1,2,3
       */
      bookingIds: number[]
    }
    PaginationRequest: {
      /**
       * Format: int32
       * @description The page number required in the paginated response
       */
      page: number
      /**
       * Format: int32
       * @description The number of results to return for paginated response
       * @example 10
       */
      size: number
    }
    PrisonerDetailRequest: {
      /**
       * @description Prisoner first name
       * @example john
       */
      firstName?: string
      /**
       * @description Prisoner last name
       * @example smith
       */
      lastName?: string
      /**
       * @description Prisoner number (aka. offenderId, nomisId)
       * @example A1234AA
       */
      nomsNumber?: string
      /**
       * @description Police National Computer (PNC) number
       * @example 2018/0123456X
       */
      pncNumber?: string
      /**
       * @description Criminal Records Office (CRO) number
       * @example SF80/655108T
       */
      croNumber?: string
      /** @description Fuzzy matching. Allow a one character difference in spelling in word lengths below five and two differences above. */
      fuzzyMatch?: boolean
      /**
       * @description List of prison codes to filter results by
       * @example ['LEI', 'MDI']
       */
      prisonIds?: string[]
      /**
       * @description Include aliases in search
       * @default true
       * @example true
       */
      includeAliases: boolean
      pagination: components['schemas']['PaginationRequest']
    }
    PrisonerDetailResponse: {
      /** Format: int32 */
      totalPages?: number
      /** Format: int64 */
      totalElements?: number
      /** Format: int32 */
      size?: number
      content?: components['schemas']['Prisoner'][]
      /** Format: int32 */
      number?: number
      sort?: components['schemas']['Sort']
      first?: boolean
      last?: boolean
      /** Format: int32 */
      numberOfElements?: number
      pageable?: components['schemas']['PageableObject']
      empty?: boolean
    }
    ErrorResponse: {
      /**
       * Format: int32
       * @description Status of Error Code
       * @example 400
       */
      status: number
      /**
       * @description Developer Information message
       * @example System is down
       */
      developerMessage?: string
      /**
       * Format: int32
       * @description Internal Error Code
       * @example 20012
       */
      errorCode?: number
      /**
       * @description Error message information
       * @example Prisoner Not Found
       */
      userMessage?: string
      /**
       * @description Additional information about the error
       * @example Hard disk failure
       */
      moreInfo?: string
    }
    MatchRequest: {
      /**
       * @description Prisoner first name
       * @example john
       */
      firstName?: string
      /**
       * @description Prisoner last Name
       * @example smith
       */
      lastName: string
      /**
       * Format: date
       * @description Prisoner date of birth
       * @example 1996-02-10
       */
      dateOfBirth?: string
      /**
       * @description Police National Computer (PNC) number
       * @example 2018/0123456X
       */
      pncNumber?: string
      /**
       * @description Criminal Records Office (CRO) number
       * @example SF80/655108T
       */
      croNumber?: string
      /**
       * @description The Prisoner NOMIS Id (aka prison number/offender no in DPS)
       * @example A1234AB
       */
      nomsNumber?: string
    }
    /** @description List of prisoners that share the same possibility of being the match */
    PrisonerMatch: {
      prisoner: components['schemas']['Prisoner']
    }
    PrisonerMatches: {
      /** @description List of prisoners that share the same possibility of being the match */
      matches: components['schemas']['PrisonerMatch'][]
      /** @description How the match was performed */
      matchedBy:
        | 'ALL_SUPPLIED'
        | 'ALL_SUPPLIED_ALIAS'
        | 'HMPPS_KEY'
        | 'EXTERNAL_KEY'
        | 'NAME'
        | 'PARTIAL_NAME'
        | 'PARTIAL_NAME_DOB_LENIENT'
        | 'NOTHING'
    }
    KeywordRequest: {
      /**
       * @description Match where any of the keywords are present in any text field
       * @example smith james john
       */
      orWords?: string
      /**
       * @description Match where all keywords are present in any text field
       * @example smith james
       */
      andWords?: string
      /**
       * @description Filter results where any of these words are present in any text field
       * @example jonas
       */
      notWords?: string
      /**
       * @description Match only prisoners where the full phrase is present in any text field
       * @example John Smith
       */
      exactPhrase?: string
      /** @description Fuzzy matching. Allow a one character difference in spelling in word lengths below five and two differences above. */
      fuzzyMatch?: boolean
      /**
       * @description List of prison codes to filter results
       * @example LEI,MDI
       */
      prisonIds?: string[]
      pagination: components['schemas']['PaginationRequest']
      /** @description The type of search. When set to DEFAULT (which is the default when not provided) search order is by calculated relevance (AKA score). An ESTABLISHMENT type will order results by name and is designed for using this API for a single quick search field for prisoners within a specific prison */
      type: 'DEFAULT' | 'ESTABLISHMENT'
    }
    KeywordResponse: {
      /** Format: int32 */
      totalPages?: number
      /** Format: int64 */
      totalElements?: number
      /** Format: int32 */
      size?: number
      content?: components['schemas']['Prisoner'][]
      /** Format: int32 */
      number?: number
      sort?: components['schemas']['Sort']
      first?: boolean
      last?: boolean
      /** Format: int32 */
      numberOfElements?: number
      pageable?: components['schemas']['PageableObject']
      empty?: boolean
    }
    /** @description Search Criteria for Global Prisoner Search */
    GlobalSearchCriteria: {
      /**
       * @description Prisoner identifier, one of prisoner number, book number, booking ID or PNC
       * @example A1234AA
       */
      prisonerIdentifier?: string
      /**
       * @description First Name
       * @example John
       */
      firstName?: string
      /**
       * @description Last Name
       * @example Smith
       */
      lastName?: string
      /**
       * @description Gender, F - Female, M - Male, NK - Not Known / Not Recorded or NS - Not Specified (Indeterminate)
       * @example M
       */
      gender?: 'M' | 'F' | 'NK' | 'NS' | 'ALL'
      /**
       * @description Location, All or Inside or Outside
       * @example IN
       */
      location?: string
      /**
       * Format: date
       * @description Date of birth
       * @example 1970-02-28
       */
      dateOfBirth?: string
      /** @description Include aliases in search */
      includeAliases: boolean
    }
    DlqMessage: {
      body: { [key: string]: { [key: string]: unknown } }
      messageId: string
    }
    GetDlqResult: {
      /** Format: int32 */
      messagesFoundCount: number
      /** Format: int32 */
      messagesReturnedCount: number
      messages: components['schemas']['DlqMessage'][]
    }
    PrisonersInPrisonRequest: {
      term?: string
      alertCodes: string[]
      pagination: components['schemas']['PaginationRequest']
    }
  }
}

export interface operations {
  retryDlq: {
    parameters: {
      path: {
        dlqName: string
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['RetryDlqResult']
        }
      }
    }
  }
  retryAllDlqs: {
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['RetryDlqResult'][]
        }
      }
    }
  }
  purgeQueue: {
    parameters: {
      path: {
        queueName: string
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['PurgeQueueResult']
        }
      }
    }
  }
  /** current index will be switched both indexed have to be complete, requires PRISONER_INDEX role */
  switchIndex: {
    responses: {
      /** Unable to switch indexes - one is marked as in progress or in error */
      409: {
        content: {
          'application/json': components['schemas']['IndexStatus']
        }
      }
    }
  }
  /** This is an internal service which isn't exposed to the outside world. It is called from a Kubernetes CronJob named `index-housekeeping-cronjob` */
  indexQueueHousekeeping: {
    responses: {
      /** Unable to marked index complete as it is in error */
      409: unknown
    }
  }
  /** Swaps to the newly built index, requires PRISONER_INDEX role */
  indexComplete: {
    parameters: {
      query: {
        ignoreThreshold?: boolean
      }
    }
    responses: {
      /** Unable to marked index complete as it is in error */
      409: {
        content: {
          'application/json': components['schemas']['IndexStatus']
        }
      }
    }
  }
  /** Requires PRISONER_INDEX role */
  indexPrisoner: {
    parameters: {
      path: {
        prisonerNumber: string
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['Prisoner']
        }
      }
    }
  }
  /** Only cancels if indexing is in progress, requires PRISONER_INDEX role */
  cancelIndex: {
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['IndexStatus']
        }
      }
    }
  }
  /** Old index is left untouched and will be maintained whilst new index is built, requires PRISONER_INDEX role */
  buildIndex: {
    responses: {
      /** Unable to build index - it is marked as in progress or in error */
      409: {
        content: {
          'application/json': components['schemas']['IndexStatus']
        }
      }
    }
  }
  /** Requires ROLE_GLOBAL_SEARCH or ROLE_PRISONER_SEARCH role */
  findByCriteria: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['PagePrisoner']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['RestrictedPatientSearchCriteria']
      }
    }
  }
  /** Requires ROLE_GLOBAL_SEARCH or ROLE_PRISONER_SEARCH role */
  findByReleaseDateAndPrison: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['PagePrisoner']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ReleaseDateSearch']
      }
    }
  }
  /** Requires ROLE_GLOBAL_SEARCH or ROLE_PRISONER_SEARCH role */
  findByNumbers: {
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['Prisoner'][]
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['PrisonerNumbers']
      }
    }
  }
  /** Requires ROLE_GLOBAL_SEARCH or ROLE_PRISONER_SEARCH role */
  findPossibleMatchesBySearchCriteria: {
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['Prisoner'][]
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['PossibleMatchCriteria']
      }
    }
  }
  /** Requires ROLE_GLOBAL_SEARCH or ROLE_PRISONER_SEARCH role */
  findByCriteria_1: {
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['Prisoner'][]
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['PrisonSearch']
      }
    }
  }
  /** Requires ROLE_GLOBAL_SEARCH or ROLE_PRISONER_SEARCH role */
  findByCriteria_2: {
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['Prisoner'][]
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['SearchCriteria']
      }
    }
  }
  /** Requires ROLE_GLOBAL_SEARCH or ROLE_PRISONER_SEARCH role */
  findByIds: {
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['Prisoner'][]
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['BookingIds']
      }
    }
  }
  /**
   * Search terms and identifiers can be provided in either or mixed case and are converted to the appropriate case.
   *       This endpoint will find both exact values (full term matched) or wildcards supporting the '*' and '?' symbols.
   *       The '*' symbol will match any number of characters e.g. firstName='J*' will match 'John', 'Jane', and 'James'.
   *       The '?' symbol will match any letter substituted at that position. e.g. firstName='t?ny' will match 'Tony' and 'Tiny'
   *       Requires ROLE_GLOBAL_SEARCH or ROLE_PRISONER_SEARCH role.
   */
  prisonerDetailSearch: {
    responses: {
      /** Search successfully performed */
      200: {
        content: {
          'application/json': components['schemas']['PrisonerDetailResponse']
        }
      }
      /** Incorrect information provided to perform prisoner match */
      400: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to search for prisoner data */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['PrisonerDetailRequest']
      }
    }
  }
  /** Specify the request criteria to match against, role required is ROLE_GLOBAL_SEARCH or ROLE_PRISONER_SEARCH */
  matchPrisoners: {
    responses: {
      /** Search successfully performed */
      200: {
        content: {
          'application/json': components['schemas']['PrisonerMatches']
        }
      }
      /** Incorrect information provided to perform prisoner match */
      400: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to search for prisoner data */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['MatchRequest']
      }
    }
  }
  /**
   * Words and identifiers can be provided in either or mixed case and will be matched against all indexed text and keyword fields.
   *       Identifiers within the [and, or, not, exact] terms are detected and converted to the appropriate case.
   *       Requires ROLE_GLOBAL_SEARCH or ROLE_PRISONER_SEARCH role.
   */
  keywordSearch: {
    responses: {
      /** Search successfully performed */
      200: {
        content: {
          'application/json': components['schemas']['KeywordResponse']
        }
      }
      /** Incorrect information provided to perform prisoner match */
      400: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to search for prisoner data */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['KeywordRequest']
      }
    }
  }
  /** Requires ROLE_GLOBAL_SEARCH role or ROLE_PRISONER_SEARCH role */
  globalFindByCriteria: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['PagePrisoner']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['GlobalSearchCriteria']
      }
    }
  }
  syntheticMonitor: {
    responses: {
      /** OK */
      200: unknown
    }
  }
  getDlqMessages: {
    parameters: {
      path: {
        dlqName: string
      }
      query: {
        maxMessages?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['GetDlqResult']
        }
      }
    }
  }
  /** Requires ROLE_PRISONER_SEARCH or ROLE_VIEW_PRISONER_DATA role */
  findByPrison: {
    parameters: {
      path: {
        id: string
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['Prisoner']
        }
      }
    }
  }
  /** Requires ROLE_GLOBAL_SEARCH or ROLE_PRISONER_SEARCH role */
  findByPrison_1: {
    parameters: {
      path: {
        prisonId: string
      }
      query: {
        'include-restricted-patients'?: boolean
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['PagePrisoner']
        }
      }
    }
  }
  /**
   * This search is optimised for clients that have a simple search term typically containing the prisonser's name
   *       or prisoner number. The user typically is certain the prisoner is within the establishment and knows key information
   *       about the prisoner.
   *       Requires ROLE_GLOBAL_SEARCH or ROLE_PRISONER_SEARCH role.
   */
  search: {
    parameters: {
      path: {
        prisonId: string
      }
      query: {
        term?: string
        page?: number
        size?: number
        alerts?: string[]
      }
    }
    responses: {
      /** Search successfully performed */
      200: {
        content: {
          'application/json': components['schemas']['PagePrisoner']
        }
      }
      /** Incorrect information provided to perform prisoner match */
      400: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Incorrect permissions to search for prisoner data */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['PrisonersInPrisonRequest']
      }
    }
  }
}

// export interface external {}
