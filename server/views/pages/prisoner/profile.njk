{% extends "layout.njk" %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{%- from "govuk/components/tag/macro.njk" import govukTag -%}
{% from "govuk/components/table/macro.njk" import govukTable %}
{% from "govuk/components/tabs/macro.njk" import govukTabs %}
{% from "govuk/components/checkboxes/macro.njk" import govukCheckboxes %}
{%- from "moj/components/banner/macro.njk" import mojBanner -%}

{% set pageHeaderTitle = prisonerDetails.name %}

{% set query = '?' + queryParamsForBackLink if queryParamsForBackLink != '' %}
{% if queryParamsForBackLink %}
  {% set backLinkHref = "/search/prisoner/results?" + queryParamsForBackLink %}
{% else %}
  {% set backLinkHref = "/search/prisoner" %}
{% endif %}

{% block content %}
  <div class="govuk-grid-row">
    <div class="govuk-grid-column-full">

      {% include "partials/errorSummary.njk" %}

      <h1 class="govuk-heading-l">{{ pageHeaderTitle }}</h1>

      {% if flaggedAlerts.length %}
        <ul class="flagged-alerts-list">
          {% for alert in flaggedAlerts %}
            <li>
              {{ govukTag({
                text: alert.alertCodeDescription,
                classes: "flagged-alert flagged-alert--" + alert.alertCode
              }) }}
            </li>
          {% endfor %}
        </ul>
      {% endif %}

      <ul class="prisoner-profile-summary">
        <li>
          <strong>Prison number</strong>
          <span data-test="prison-number">{{ prisonerDetails.prisonerId }}</span>
        </li>
        <li>
          <strong>Date of birth</strong>
          <span data-test="dob">{{ prisonerDetails.dateOfBirth }}</span>
        </li>
        <li>
          <strong>Location</strong>
          <span data-test="location">{{ prisonerDetails.cellLocation }}, {{ prisonerDetails.prisonName }}</span>
        </li>
        <li>
          <strong>Category</strong>
          <span data-test="category">{{ prisonerDetails.category }}</span>
        </li>
        <li>
          <strong>Conviction status</strong>
          <span data-test="convicted-status">{{ prisonerDetails.convictedStatus }}</span>
        </li>
        <li>
          <strong>Incentive level</strong>
          <span data-test="iep-level">{{ prisonerDetails.incentiveLevel }}</span>
        </li>
        <li>
          <strong>Alerts</strong>
          <span data-test="active-alert-count">{{ activeAlertCount }} active</span>
        </li>
        {% if prisonerDetails.visitBalances %}
          <li>
            <strong>VO balance</strong>
            <span data-test="remaining-vos">{{ prisonerDetails.visitBalances.remainingVo }}</span>
          </li>
          <li>
            <strong>PVO balance</strong>
            <span data-test="remaining-pvos">{{ prisonerDetails.visitBalances.remainingPvo }}</span>
          </li>
        {% endif %}
      </ul>

      <form action="/prisoner/{{ prisonerDetails.prisonerId }}" method="POST" novalidate>
        {% if prisonerDetails.visitBalances.remainingVo <= 0 and prisonerDetails.visitBalances.remainingPvo <= 0 %}
          {% set voOverrideCheckbox %}
            {{ govukCheckboxes({
              name: "vo-override",
              formGroup: {
                classes: "govuk-!-margin-1"
              },
              items: [
                {
                  value: "override",
                  text: "The prisoner has no available visiting orders. Select the box if a booking can still be made.",
                  label: {
                    classes: "govuk-!-font-weight-bold govuk-!-font-size-24"
                  }
                }
              ],
              errorMessage: errors | findError('vo-override')
            }) }}
          {% endset %}
          {{ mojBanner({
            html: voOverrideCheckbox
          }) }}
        {% endif %}

        <input type="hidden" name="_csrf" value="{{ csrfToken }}">
        {{ govukButton({
          text: "Book a prison visit",
          attributes: { "data-test": "book-a-visit" },
          preventDoubleClick: true
        }) }}
      </form>

    </div>
  </div>
  <div class="govuk-grid-row">
    <div class="govuk-grid-column-full">

    {% set visitsTab %}
      {% if visitsByMonth | length %}

        {% for month, data in visitsByMonth %}

          {# Build month headings with visit counts - e.g. "January 2022 (1 upcoming visit, 1 past visit)" #}
          {% set upcomingCount %}{{ data.upcomingCount }} upcoming {{ "visit" | pluralise(data.upcomingCount) }}{% endset %}
          {% set pastCount %}{{ data.pastCount }} past {{ "visit" | pluralise(data.pastCount) }}{% endset %}
          {% set visitTotals %}
            {{- upcomingCount if data.upcomingCount -}}
            {{- ", " if data.upcomingCount and data.pastCount -}}
            {{- pastCount if data.pastCount -}}
          {% endset %}

          {# Build rows for this month's visits table #}
          {% set visitRows = [] %}
          {% for visit in data.visits %}

            {% set visitorNames = [] %}
            {% for visitor in visit.visitors %}
              {% set visitorNames = (visitorNames.push(visitor.firstName + ' ' + visitor.lastName), visitorNames) %}
            {% endfor %}

            {% set visitRows = (visitRows.push([
              {
                html: '<a class="govuk-link--no-visited-state" href="/visit/' + visit.reference + '">' +  visit.reference + '</a>',
                attributes: { "data-test": "tab-visits-reference" }
              },
              {
                html: '<span>' + visit.visitType | capitalize + '<br>(' + visit.visitRestriction | capitalize + ')</span>',
                attributes: { "data-test": "tab-visits-type" }
              },
              {
                text: visit.prisonName,
                attributes: { "data-test": "tab-visits-location" }
              },
              {
                html: visit.startTimestamp | formatDate("EEEE d MMMM yyy") + '<br>' +
                  visit.startTimestamp | formatTime + ' - ' + visit.endTimestamp | formatTime,
                attributes: { "data-test": "tab-visits-date-and-time" }
              },
              {
                html: visitorNames | join('<br>'),
                attributes: { "data-test": "tab-visits-visitors" }
              },
              {
                text: visit.visitStatus | capitalize,
                attributes: { "data-test": "tab-visits-status" }
              }
            ]), visitRows) %}
          {% endfor %}

          {{ govukTable({
            caption: month + (" (" + visitTotals + ")" if visitTotals),
            captionClasses: "govuk-table__caption--m",
            classes: "prisoner-profile-visits",
            head: [
              {
                text: "Visit reference"
              },
              {
                text: "Visit type"
              },
              {
                text: "Establishment"
              },
              {
                text: "Date and time"
              },
              {
                text: "Visitors"
              },
              {
                text: "Visit status"
              }
            ],
            rows: visitRows
          }) }}
        {% endfor %}

      {% else %}
        <p>There are no upcoming visits or visits within the last 3 months for this prisoner.</p>
      {% endif %}

      {{ govukButton({
        text: "View full visits history",
        classes: "govuk-!-margin-top-3 govuk-button--secondary",
        href: dpsPrisoner + "prisoner/" + prisonerDetails.prisonerId + '/visits-details',
        attributes: { "data-test": "view-dps-profile" },
        preventDoubleClick: true
      })}}
    {% endset %}

    {% set alertsTab %}
      <h2 class="govuk-heading-m">Active alerts</h2>
      <p>This page shows alerts that are relevant for social visits. You can also <a class="govuk-link--no-visited-state" href="{{ prisonerDpsAlertsUrl }}" target="_blank" data-test="all-alerts-link">view all alerts</a>.</p>

      {% if activeAlerts | length %}

        {# Build rows for alerts table #}
        {% set alertRows = [] %}
        {% for alert in activeAlerts %}
          {% set alertRows = (alertRows.push([
            {
              text: alert.alertTypeDescription + " (" + alert.alertType + ")",
              attributes: { "data-test": "tab-alerts-type-desc" }
            },
            {
              text: alert.alertCodeDescription + " (" + alert.alertCode + ")",
              attributes: { "data-test": "tab-alerts-code-desc" }
            },
            {
              text: alert.comment,
              classes: "bapv-force-overflow",
              attributes: { "data-test": "tab-alerts-comment" }
            },
            {
              html: alert.dateCreated | formatDate("d'&nbsp;'MMMM yyyy") if alert.dateCreated else "Not entered",
              attributes: { "data-test": "tab-alerts-created" }
            },
            {
              text: alert.dateExpires | formatDate if alert.dateExpires else "Not entered",
              attributes: { "data-test": "tab-alerts-expires" }
            }
          ]), alertRows) %}
        {% endfor %}

        {{ govukTable({
          head: [
            {
              text: "Type of alert",
              classes: "bapv-table_cell--nowrap"
            },
            {
              text: "Alert"
            },
            {
              text: "Comments"
            },
            {
              text: "Date from",
              classes: "bapv-table_cell--nowrap"
            },
            {
              text: "Date to",
              classes: "bapv-table_cell--nowrap"
            }
          ],
          rows: alertRows
        }) }}
      {% endif %}
    {% endset %}

    {% set visitingOrdersTab %}
      <h2 class="govuk-heading-m">Visiting orders</h2>
      {{ govukTable({
        head: [
          {
            text: "Type"
          },
          {
            text: "Balance"
          },
          {
            text: "Last allocation date"
          },
          {
            text: "Next allocation date"
          }
        ],
        rows: [
          [
            {
              html: "<strong>VO</strong>"
            },
            {
              text: prisonerDetails.visitBalances.remainingVo,
              attributes: {
                "data-test": "tab-vo-remaining"
              }
            },
            {
              text: prisonerDetails.visitBalances.latestIepAdjustDate,
              attributes: {
                "data-test": "tab-vo-last-date"
              }
            },
            {
              text: prisonerDetails.visitBalances.nextIepAdjustDate,
              attributes: {
                "data-test": "tab-vo-next-date"
              }
            }
          ],
          [
            {
              html: "<strong>PVO</strong>"
            },
            {
              text: prisonerDetails.visitBalances.remainingPvo,
              attributes: {
                "data-test": "tab-pvo-remaining"
              }
            },
            {
              text: prisonerDetails.visitBalances.latestPrivIepAdjustDate,
              attributes: {
                "data-test": "tab-pvo-last-date"
              }
            },
            {
              text: prisonerDetails.visitBalances.nextPrivIepAdjustDate,
              attributes: {
                "data-test": "tab-pvo-next-date"
              }
            }
          ]
        ]
      }) }}
    {% endset %}

    {{ govukTabs({
      classes: 'bapv-tabs',
      items: [
       {
          label: "Visits",
          id: "visits",
          panel: {
            html: visitsTab
          }
        },
        {
          label: "Alerts",
          id: "active-alerts",
          panel: {
            html: alertsTab
          }
        },
        {
          label: "Visiting orders",
          id: "visiting-orders",
          panel: {
            html: visitingOrdersTab
          }
        } if prisonerDetails.visitBalances
      ]
    }) }}
    </div>
  </div>
{% endblock %}

{% block pageScripts %}
  <script src="/assets/voOverride.js"></script>
{% endblock %}
